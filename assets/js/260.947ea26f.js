(window.webpackJsonp=window.webpackJsonp||[]).push([[260],{458:function(t,e,s){"use strict";s.r(e);var a=s(0),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("RouterLink",{attrs:{to:"/type-jsonrpc/"}},[t._v("Polkadot JS API")]),t._v(" â€º "),s("RouterLink",{attrs:{to:"/type-jsonrpc/globals.html"}},[t._v("Globals")])],1),t._v(" "),s("h1",{attrs:{id:"polkadot-js-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#polkadot-js-api"}},[t._v("#")]),t._v(" Polkadot JS API")]),t._v(" "),s("h1",{attrs:{id:"polkadot-jsonrpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#polkadot-jsonrpc"}},[t._v("#")]),t._v(" @polkadot/jsonrpc")]),t._v(" "),s("p",[t._v("A definition of all the methods exposed in a general Polkadot client application. These are used not only to provide a comprehensive code-generated document of the available methods, but are also used in the API to auto-generate endpoints with the required type-checking.")]),t._v(" "),s("p",[t._v("For a list of currently exposed methods, see the "),s("RouterLink",{attrs:{to:"/type-jsonrpc/docs/substrate/rpc.html"}},[t._v("method documentation")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("p",[t._v("Installation -")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yarn add @polkadot/jsonrpc\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"adding-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-methods"}},[t._v("#")]),t._v(" Adding methods")]),t._v(" "),s("p",[t._v("As methods are added, simply adding the name, inputs & output will prepare it for use.")]),t._v(" "),s("ul",[s("li",[t._v("Add the method to the correct file in "),s("RouterLink",{attrs:{to:"/type-jsonrpc/src/rpc/"}},[t._v("src/rpc/")]),t._v(" (Input/Output types as cross-referenced from the canonical implementation and match one-to-one)")],1),t._v(" "),s("li",[t._v("Should a new type be required, add it to the type list, "),s("a",{attrs:{href:"src/types.js"}},[t._v("src/types.js")]),t._v(" (Required for TSLint type checking)")])]),t._v(" "),s("h2",{attrs:{id:"classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#classes"}},[t._v("#")]),t._v(" Classes")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/type-jsonrpc/SUMMARY.html"}},[t._v("Classes")])],1)])}),[],!1,null,null,null);e.default=o.exports}}]);